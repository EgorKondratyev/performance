# Generated by Django 4.2.1 on 2023-05-23 16:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbreviated_name', models.CharField(max_length=7, unique=True, verbose_name='Сокращенное название')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название')),
                ('form_of_education', models.CharField(choices=[('correspondence_abbreviated', 'Заочная сокращенная'), ('correspondence', 'Заочная'), ('full_time', 'Дневная')], default='full_time', max_length=40)),
            ],
            options={
                'verbose_name': 'группа',
                'verbose_name_plural': 'группы',
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True, verbose_name='Название')),
                ('qualification', models.CharField(max_length=128, verbose_name='Квалификация')),
                ('study_period', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Период обучения')),
                ('admission_plan', models.IntegerField(default=20, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(40)], verbose_name='План приема')),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=24, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=40, verbose_name='Фамилия')),
                ('last_name', models.CharField(max_length=24, verbose_name='Отчество')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='students', to='academic_performance.groups', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'студент',
                'verbose_name_plural': 'студенты',
            },
        ),
        migrations.AddField(
            model_name='groups',
            name='speciality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='groups', to='academic_performance.speciality', verbose_name='Специальность'),
        ),
        migrations.AddField(
            model_name='groups',
            name='subjects',
            field=models.ManyToManyField(related_name='groups', to='academic_performance.subjects', verbose_name='Предметы'),
        ),
        migrations.CreateModel(
            name='AcademicPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Отметка')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance', to='academic_performance.students', verbose_name='Студен')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance', to='academic_performance.subjects', verbose_name='Предмет')),
            ],
        ),
    ]
